Coverage Report by file with details

=================================================================================
=== File: intf.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                            6         6         0    100.00

================================Statement Details================================

Statement Coverage for file intf.sv --

    1                                                interface intf(input logic clk);
    2                                                
    3                                                 
    4                                                 logic rst;
    5                                                 logic  En;
    6                                                 logic [3:0] Address;
    7                                                 logic [31:0] Data_in;
    8                                                 logic [31:0] Data_out;
    9                                                 logic Valid_out;
    10                                               	 logic Rw_en;
    11                                               	 logic Rr_en;
    12                                                 
    13                                                
    14                                                 
    15                                               
    16              1                          1      clocking cb @(posedge clk );
    17                                                    default input #1 output #1;
    18              1                          1         input  Data_in;
    19              1                          1         input  Address;
    20              1                          1         input  Rw_en;
    21              1                          1         input  Rr_en;
    22              1                          1         input  rst;
    23                                                   output Data_out;
    24                                                   output Valid_out;
    25                                                  endclocking
    26                                                 
    27                                               endinterface 

Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                    148        51        97     34.45

================================Toggle Details================================

Toggle Coverage for File intf.sv --

       Line                                   Node      1H->0L      0L->1H  "Coverage"
--------------------------------------------------------------------------------------
          4                                    rst           1           0       50.00 
          7                             Data_in[9]           0           0        0.00 
          7                             Data_in[8]           0           0        0.00 
          7                            Data_in[31]           0           0        0.00 
          7                            Data_in[30]           0           0        0.00 
          7                            Data_in[29]           0           0        0.00 
          7                            Data_in[28]           0           0        0.00 
          7                            Data_in[27]           0           0        0.00 
          7                            Data_in[26]           0           0        0.00 
          7                            Data_in[25]           0           0        0.00 
          7                            Data_in[24]           0           0        0.00 
          7                            Data_in[23]           0           0        0.00 
          7                            Data_in[22]           0           0        0.00 
          7                            Data_in[21]           0           0        0.00 
          7                            Data_in[20]           0           0        0.00 
          7                            Data_in[19]           0           0        0.00 
          7                            Data_in[18]           0           0        0.00 
          7                            Data_in[17]           0           0        0.00 
          7                            Data_in[16]           0           0        0.00 
          7                            Data_in[15]           0           0        0.00 
          7                            Data_in[14]           0           0        0.00 
          7                            Data_in[13]           0           0        0.00 
          7                            Data_in[12]           0           0        0.00 
          7                            Data_in[11]           0           0        0.00 
          7                            Data_in[10]           0           0        0.00 
          8                            Data_out[9]           0           0        0.00 
          8                            Data_out[8]           0           0        0.00 
          8                           Data_out[31]           0           0        0.00 
          8                           Data_out[30]           0           0        0.00 
          8                           Data_out[29]           0           0        0.00 
          8                           Data_out[28]           0           0        0.00 
          8                           Data_out[27]           0           0        0.00 
          8                           Data_out[26]           0           0        0.00 
          8                           Data_out[25]           0           0        0.00 
          8                           Data_out[24]           0           0        0.00 
          8                           Data_out[23]           0           0        0.00 
          8                           Data_out[22]           0           0        0.00 
          8                           Data_out[21]           0           0        0.00 
          8                           Data_out[20]           0           0        0.00 
          8                           Data_out[19]           0           0        0.00 
          8                           Data_out[18]           0           0        0.00 
          8                           Data_out[17]           0           0        0.00 
          8                           Data_out[16]           0           0        0.00 
          8                           Data_out[15]           0           0        0.00 
          8                           Data_out[14]           0           0        0.00 
          8                           Data_out[13]           0           0        0.00 
          8                           Data_out[12]           0           0        0.00 
          8                           Data_out[11]           0           0        0.00 
          8                           Data_out[10]           0           0        0.00 

Total Node Count     =         74 
Toggled Node Count   =         25 
Untoggled Node Count =         49 

Toggle Coverage      =      34.45% (51 of 148 bins)

=================================================================================
=== File: mem.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                            7         7         0    100.00

================================Statement Details================================

Statement Coverage for file mem.sv --

    1                                                
    2                                                module mem (intf in1);         // Passing the interface to the module
    3                                                
    4                                                  logic [31:0] memory [15:0];  // Memory array
    5                                                
    6               1                       6205       always @(posedge in1.clk ) begin
    7                                                        if (in1.rst) begin
    8                                                		
    9               1                          5                 in1.Valid_out <= 1'bx;
    10              1                          5                 in1.Data_out  <= 32'bx;
    11                                                       
    12                                                       end else if (in1.En && in1.Rr_en) begin
    13                                                           // Read operation
    14              1                       1100                 in1.Valid_out <= 1;
    15              1                       1100                 in1.Data_out  <= memory[in1.Address];
    16                                                      
    17                                                       end else if (in1.En && in1.Rw_en) begin
    18                                                           // Write operation
    19              1                       5099                 memory[in1.Address]  <= in1.Data_in;
    20              1                       5099                 in1.Valid_out        <= 0; 
    21                                                       end
    22                                                   end
    23                                               endmodule

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         4         4         0    100.00

================================Branch Details================================

Branch Coverage for file mem.sv --

------------------------------------IF Branch------------------------------------
    7                                       6205     Count coming in to IF
    7               1                          5             if (in1.rst) begin
    12              1                       1100             end else if (in1.En && in1.Rr_en) begin
    17              1                       5099             end else if (in1.En && in1.Rw_en) begin
                                               1     All False Count
Branch totals: 4 hits of 4 branches = 100.00%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              4         1         3     25.00

================================Condition Details================================

Condition Coverage for file mem.sv --

----------------Focused Condition View-------------------
Line       12 Item    1  (En && Rr_en)
Condition totals: 1 of 2 input terms covered = 50.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
          En         N  '_0' not hit             Hit '_0'
       Rr_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  En_0                  -                             
  Row   2:          1  En_1                  Rr_en                         
  Row   3:          1  Rr_en_0               En                            
  Row   4:          1  Rr_en_1               En                            

----------------Focused Condition View-------------------
Line       17 Item    1  (En && Rw_en)
Condition totals: 0 of 2 input terms covered = 0.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
          En         N  '_0' not hit             Hit '_0'
       Rw_en         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  En_0                  -                             
  Row   2:          1  En_1                  Rw_en                         
  Row   3:    ***0***  Rw_en_0               En                            
  Row   4:          1  Rw_en_1               En                            



=================================================================================
=== File: my_agent.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           16        12         4     75.00

================================Statement Details================================

Statement Coverage for file my_agent.sv --

    1                                                
    2                                                
    3                                                class my_agent extends uvm_agent;
    4               1                    ***0***       `uvm_component_utils(my_agent)
    4               2                    ***0***     
    4               3                    ***0***     
    5                                                  
    6                                                  my_driver driver;
    7                                                  my_monitor monitor;
    8                                                  my_sequencer sequencer;
    9                                                  uvm_analysis_port#(my_sequence_item) my_analysis_port; 
    10                                                 virtual intf my_vif;
    11                                               
    12                                                 
    13                                                 function new(string name = "my_agent", uvm_component parent);
    14              1                          1         super.new(name, parent);
    15                                                 endfunction
    16                                                 
    17                                                 function void build_phase(uvm_phase phase);
    18              1                          1         super.build_phase(phase);
    19                                                   
    20              1                          1         driver    = my_driver   ::type_id::create("driver"   , this);
    21              1                          1         monitor   = my_monitor  ::type_id::create("monitor"  , this);
    22              1                          1         sequencer = my_sequencer::type_id::create("sequencer", this);
    23                                                   
    24                                                   // vertuil interface get and set in drv and mon
    25                                                   if(!uvm_config_db#(virtual intf)::get(this, "", "my_vif", my_vif))
    26              1                    ***0***           `uvm_fatal(get_full_name(), "Error")
    27                                                     
    28              1                          1            uvm_config_db#(virtual intf)::set(this, "driver"  , "my_vif" , my_vif);
    29              1                          1            uvm_config_db#(virtual intf)::set(this, "monitor" , "my_vif" , my_vif);
    30                                                   
    31                                                   // create port 
    32              1                          1            my_analysis_port = new("my_analysis_port", this);
    33                                                 endfunction
    34                                                 
    35                                                 function void connect_phase(uvm_phase phase);
    36              1                          1       	super.connect_phase(phase);
    37              1                          1         monitor.my_analysis_port.connect (my_analysis_port);
    38              1                          1         driver .seq_item_port.connect   (sequencer.seq_item_export);
    39                                                 endfunction
    40                                                 
    41                                                 task run_phase(uvm_phase phase);
    42              1                          1         super.run_phase(phase);
    43                                                 endtask
    44                                                
    45                                               endclass

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         4         1         3     25.00

================================Branch Details================================

Branch Coverage for file my_agent.sv --

------------------------------------IF Branch------------------------------------
    25                                         1     Count coming in to IF
    25              1                    ***0***         if(!uvm_config_db#(virtual intf)::get(this, "", "my_vif", my_vif))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    26                                   ***0***     Count coming in to IF
    26              1                    ***0***           `uvm_fatal(get_full_name(), "Error")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%



=================================================================================
=== File: my_driver.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           17        13         4     76.47

================================Statement Details================================

Statement Coverage for file my_driver.sv --

    1                                                
    2                                                
    3                                                class my_driver extends uvm_driver#(my_sequence_item);
    4               1                    ***0***       `uvm_component_utils(my_driver)
    4               2                    ***0***     
    4               3                    ***0***     
    5                                                  
    6                                                   my_sequence_item seq_item;
    7                                                   virtual intf my_vif;
    8                                                  
    9                                                  function new(string name = "my_driver", uvm_component parent = null);
    10              1                          1         super.new(name, parent);
    11                                                 endfunction
    12                                                 
    13                                                 function void build_phase(uvm_phase phase);
    14              1                          1         super.build_phase(phase);
    15                                                     if(!uvm_config_db#(virtual intf)::get(this, "", "my_vif", my_vif))
    16              1                    ***0***           `uvm_fatal(get_full_name(), "Error")
    17                                                 endfunction
    18                                                       
    19                                                 function void connect_phase(uvm_phase phase);
    20              1                          1        super.connect_phase(phase);
    21                                                 endfunction
    22                                                 
    23                                                 task run_phase(uvm_phase phase);
    24              1                          1         forever begin
    25              1                       6206           seq_item_port.get_next_item(seq_item); 
    26              1                       6205           @(negedge my_vif.clk)
    27              1                       6205           my_vif.Data_in <= seq_item.Data_in; 
    28              1                       6205           my_vif.Address <= seq_item.Address;
    29              1                       6205           my_vif.En      <= seq_item.En;
    30              1                       6205           my_vif.Rr_en   <= seq_item.Rr_en;
    31              1                       6205           my_vif.Rw_en   <= seq_item.Rw_en;
    32              1                       6205           my_vif.rst     <= seq_item.rst;
    33              1                       6205           seq_item_port.item_done();
    34                                                   end
    35                                                 endtask
    36                                                 
    37                                               endclass

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         4         1         3     25.00

================================Branch Details================================

Branch Coverage for file my_driver.sv --

------------------------------------IF Branch------------------------------------
    15                                         1     Count coming in to IF
    15              1                    ***0***           if(!uvm_config_db#(virtual intf)::get(this, "", "my_vif", my_vif))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    16                                   ***0***     Count coming in to IF
    16              1                    ***0***           `uvm_fatal(get_full_name(), "Error")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%



=================================================================================
=== File: my_env.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           14        10         4     71.42

================================Statement Details================================

Statement Coverage for file my_env.sv --

    1                                                
    2                                                class my_env extends uvm_env;
    3               1                    ***0***       `uvm_component_utils(my_env)
    3               2                    ***0***     
    3               3                    ***0***     
    4                                                
    5                                                  my_agent      agent;
    6                                                  my_subscriber subscriber;
    7                                                  my_scoreboard scoreboard;
    8                                                  virtual intf my_vif;
    9                                                
    10                                                 function new(string name, uvm_component parent);
    11              1                          1         super.new(name, parent);
    12                                                 endfunction
    13                                               
    14                                                 function void build_phase(uvm_phase phase);
    15              1                          1         super.build_phase(phase);
    16                                               
    17                                                   // Create the agent//subscriber// scoreboard
    18              1                          1         agent      = my_agent::type_id::create     ("agent"     , this);
    19              1                          1         subscriber = my_subscriber::type_id::create("subscriber", this);
    20              1                          1         scoreboard = my_scoreboard::type_id::create("scoreboard", this);
    21                                               
    22                                                   // Get the virtual interface and set it for the agent
    23                                                   if (!uvm_config_db#(virtual intf)::get(this, "", "my_vif", my_vif))
    24              1                    ***0***           `uvm_fatal(get_full_name(), "Error")
    25                                                   
    26              1                          1            uvm_config_db#(virtual intf)::set(this, "agent", "my_vif", my_vif);
    27                                                 endfunction
    28                                               
    29                                                 function void connect_phase(uvm_phase phase);
    30              1                          1         super.connect_phase(phase);
    31                                               
    32                                                   // Connect the agent's analysis port directly to the scoreboard's analysis imp
    33              1                          1         agent.my_analysis_port.connect(scoreboard.my_analysis_imp);
    34                                                   // Connect the agent's analysis port to the subscriber's analysis export
    35              1                          1         agent.my_analysis_port.connect(subscriber.analysis_export);
    36                                                 endfunction
    37                                               
    38                                                 task run_phase(uvm_phase phase);
    39              1                          1         super.run_phase(phase);
    40                                                 endtask
    41                                               endclass

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         4         1         3     25.00

================================Branch Details================================

Branch Coverage for file my_env.sv --

------------------------------------IF Branch------------------------------------
    23                                         1     Count coming in to IF
    23              1                    ***0***         if (!uvm_config_db#(virtual intf)::get(this, "", "my_vif", my_vif))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    24                                   ***0***     Count coming in to IF
    24              1                    ***0***           `uvm_fatal(get_full_name(), "Error")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%



=================================================================================
=== File: my_monitor.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           22        18         4     81.81

================================Statement Details================================

Statement Coverage for file my_monitor.sv --

    1                                                
    2                                                class my_monitor extends uvm_monitor;
    3               1                    ***0***      `uvm_component_utils(my_monitor)
    3               2                    ***0***     
    3               3                    ***0***     
    4                                                  
    5                                                  my_sequence_item seq_item;
    6                                                  virtual intf my_vif;
    7                                                  
    8                                                  uvm_analysis_port#(my_sequence_item) my_analysis_port; // 1 inst port
    9                                                  
    10                                                
    11                                                 function new (string name = "my_monitor", uvm_component parent);
    12              1                          1         super.new(name, parent);
    13                                                 endfunction
    14                                                 
    15                                                 function void build_phase(uvm_phase phase);
    16              1                          1         super.build_phase(phase);
    17                                                     if(!uvm_config_db#(virtual intf)::get(this, "", "my_vif", my_vif))
    18              1                    ***0***           `uvm_fatal(get_full_name(), "Error")
    19              1                          1           my_analysis_port = new("my_analysis_port", this); // 2 handle
    20              1                          1           seq_item = my_sequence_item::type_id::create("seq_item");
    21                                                 endfunction
    22                                                 
    23                                                 function void connect_phase(uvm_phase phase);
    24              1                          1          super.connect_phase(phase);
    25                                                 endfunction
    26                                               
    27                                                 
    28                                                 task run_phase(uvm_phase phase);
    29              1                          1        super.run_phase(phase);
    30                                                   
    31              1                          1       forever begin
    32              1                       6205        #10;
    33              1                       6204         @( my_vif.cb) 
    34              1                       6204           seq_item.Data_in    = my_vif.Data_in;
    35              1                       6204           seq_item.Address    = my_vif.Address;
    36              1                       6204           seq_item.Data_out   = my_vif.Data_out;
    37              1                       6204           seq_item.Valid_out  = my_vif.Valid_out;
    38              1                       6204           seq_item.En         = my_vif.En ;
    39              1                       6204           seq_item.Rr_en      = my_vif.Rr_en;
    40              1                       6204           seq_item.Rw_en      = my_vif.Rw_en;
    41              1                       6204           seq_item.rst        = my_vif.rst;
    42                                                     // Send the captured data to analysis port
    43              1                       6204           my_analysis_port.write(seq_item);
    44                                                    
    45                                                  end
    46                                                  endtask
    47                                               endclass

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         4         1         3     25.00

================================Branch Details================================

Branch Coverage for file my_monitor.sv --

------------------------------------IF Branch------------------------------------
    17                                         1     Count coming in to IF
    17              1                    ***0***           if(!uvm_config_db#(virtual intf)::get(this, "", "my_vif", my_vif))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    18                                   ***0***     Count coming in to IF
    18              1                    ***0***           `uvm_fatal(get_full_name(), "Error")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%



=================================================================================
=== File: my_scoreboard.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           27        24         3     88.88

================================Statement Details================================

Statement Coverage for file my_scoreboard.sv --

    1                                                
    2                                                class my_scoreboard extends uvm_scoreboard;
    3               1                    ***0***       `uvm_component_utils(my_scoreboard)
    3               2                    ***0***     
    3               3                      12406     
    4                                                   my_sequence_item seq_item ;
    5                                                  
    6                                                  int total_write;
    7                                                  int total_rst;
    8                                                  int total_read;
    9                                                  int correct_read;
    10                                                 logic [31:0] mem_reg [15:0];  
    11                                                 
    12                                                 // Declare analysis imp to directly receive transactions
    13                                                 uvm_analysis_imp#(my_sequence_item, my_scoreboard) my_analysis_imp;
    14                                               
    15                                                 function new(string name = "my_scoreboard", uvm_component parent);
    16              1                          1         super.new(name, parent);
    17                                                 endfunction
    18                                               
    19                                                 function void build_phase(uvm_phase phase);
    20              1                          1         super.build_phase(phase);
    21                                                   // Create analysis imp with callback to write method
    22              1                          1         my_analysis_imp = new("my_analysis_imp", this);
    23              1                          1         seq_item = my_sequence_item::type_id::create("seq_item");
    24                                                 endfunction
    25                                               
    26                                                 function void write (input my_sequence_item seq_item);
    27                                                    
    28              1                       6204         this.seq_item = seq_item ;
    29                                               
    30                                                   
    31                                                   if (seq_item.rst)begin 
    32              1                          5           total_rst++;
    33              1                          5           $display(" RESET ");
    34                                                   end else 
    35                                                   if (seq_item.Rw_en) begin
    36              1                       5099           total_write++;
    37              1                       5099           mem_reg[seq_item.Address] = seq_item.Data_in;
    38              1                       5099           `uvm_info(get_type_name(), $sformatf("[write]: Address=%0d, Data_in=%0h", seq_item.Address, seq_item.Data_in), UVM_LOW)
    39              1                       5099           $display  (" WRITE" );
    40                                                   end else 
    41                                                   if (seq_item.Rr_en ) begin
    42              1                       1100             total_read++;
    43              1                       1100            `uvm_info(get_type_name(), $sformatf("[read]: Address=%0d, Data_out=%0h", seq_item.Address, seq_item.Data_out), UVM_LOW)
    44              1                       1100           $display (" READ ");
    45                                                     
    46                                                       if (seq_item.Data_out === mem_reg[seq_item.Address]) begin
    47              1                       1100                  correct_read++;
    48              1                       1100               $display("[scorebored_PASS] \n Address      = %0d \n Expected Data= %0d \n Actual   Data= %0d"
    49                                                                , seq_item.Address, mem_reg[seq_item.Address], seq_item.Data_out);
    50                                                       end
    51                                                  
    52                                                   end 
    53                                                   else begin
    54              1                    ***0***           $display("[Scoreboard Failure]");
    55                                                   end    
    56                                               
    57                                                 endfunction
    58                                                 
    59                                                 function void connect_phase(uvm_phase phase);
    60              1                          1         super.connect_phase(phase);
    61                                                 endfunction
    62                                               
    63                                                 task run_phase(uvm_phase phase);
    64              1                          1         super.run_phase(phase);
    65                                                 endtask
    66                                                 
    67                                                 
    68                                                 function void report_phase(uvm_phase phase);
    69              1                          1          super.report_phase(phase);
    70              1                          1         `uvm_info(get_type_name(), $sformatf("total  reset = %0d", total_rst), UVM_LOW)
    71              1                          1         `uvm_info(get_type_name(), $sformatf("total  write = %0d", total_write), UVM_LOW)
    72              1                          1         `uvm_info(get_type_name(), $sformatf("total  read  = %0d", total_read), UVM_LOW)
    73              1                          1         `uvm_info(get_type_name(), $sformatf("total correct read =  %0d", correct_read), UVM_LOW)
    74                                                 endfunction
    75                                               endclass

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                        18        10         8     55.55

================================Branch Details================================

Branch Coverage for file my_scoreboard.sv --

------------------------------------IF Branch------------------------------------
    31                                      6204     Count coming in to IF
    31              1                          5         if (seq_item.rst)begin 
    35              1                       5099         if (seq_item.Rw_en) begin
    41              1                       1100         if (seq_item.Rr_en ) begin
    53              1                    ***0***         else begin
Branch totals: 3 hits of 4 branches = 75.00%

------------------------------------IF Branch------------------------------------
    38                                      5099     Count coming in to IF
    38              1                       5099           `uvm_info(get_type_name(), $sformatf("[write]: Address=%0d, Data_in=%0h", seq_item.Address, seq_item.Data_in), UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    43                                      1100     Count coming in to IF
    43              1                       1100            `uvm_info(get_type_name(), $sformatf("[read]: Address=%0d, Data_out=%0h", seq_item.Address, seq_item.Data_out), UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    46                                      1100     Count coming in to IF
    46              1                       1100             if (seq_item.Data_out === mem_reg[seq_item.Address]) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    70                                         1     Count coming in to IF
    70              1                          1         `uvm_info(get_type_name(), $sformatf("total  reset = %0d", total_rst), UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    71                                         1     Count coming in to IF
    71              1                          1         `uvm_info(get_type_name(), $sformatf("total  write = %0d", total_write), UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    72                                         1     Count coming in to IF
    72              1                          1         `uvm_info(get_type_name(), $sformatf("total  read  = %0d", total_read), UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    73                                         1     Count coming in to IF
    73              1                          1         `uvm_info(get_type_name(), $sformatf("total correct read =  %0d", correct_read), UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              1         0         1      0.00

================================Condition Details================================

Condition Coverage for file my_scoreboard.sv --

----------------Focused Condition View-------------------
Line       46 Item    1  (seq_item.Data_out === this.mem_reg[seq_item.Address])
Condition totals: 0 of 1 input term covered = 0.00%

                                              Input Term   Covered  Reason for no coverage   Hint
                                             -----------  --------  -----------------------  --------------
  (seq_item.Data_out === this.mem_reg[seq_item.Address])         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                      -------------------------     
  Row   1:    ***0***  (seq_item.Data_out === this.mem_reg[seq_item.Address])_0  -                             
  Row   2:          1  (seq_item.Data_out === this.mem_reg[seq_item.Address])_1  -                             



=================================================================================
=== File: my_sequence.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           45        27        18     60.00

================================Statement Details================================

Statement Coverage for file my_sequence.sv --

    1                                                
    2                                                
    3                                                class my_sequence extends uvm_sequence;
    4               1                    ***0***       `uvm_object_utils(my_sequence)
    4               2                    ***0***     
    4               3                    ***0***     
    4               4                    ***0***     
    4               5                    ***0***     
    4               6                          1     
    4               7                    ***0***     
    4               8                    ***0***     
    4               9                    ***0***     
    4              10                    ***0***     
    5                                                  
    6                                                   my_sequence_item seq_item;
    7                                                  
    8                                                  function new(string name = "my_sequence");
    9               1                          2         super.new(name);
    10                                                 endfunction
    11                                                 
    12                                                 task pre_body;
    13              1                          1        seq_item = my_sequence_item::type_id::create("seq_item"); 
    14                                                 endtask
    15                                                 
    16                                                 task reset ;
    17              1                          5          repeat(5) begin
    18              1                          5            start_item(seq_item);
    19                                                       assert (seq_item.randomize() with {seq_item.rst == 1;})
    20                                                              else 
    21                                                              $error("randomization error") ;
    22              1                          5             finish_item(seq_item);
    23                                                     end
    24                                                 endtask
    25                                                
    26                                                 task write ;
    27              1                       5000           repeat(5000)begin
    28              1                       5000             start_item(seq_item);
    29                                                         assert(seq_item.randomize()with {seq_item.rst == 0 ;seq_item.Rw_en == 1 ;seq_item.En ==1 ;})
    30                                                          else 
    31                                                          $error("randomization error") ;
    32              1                       5000             finish_item(seq_item);
    33                                                     end
    34                                                 endtask 
    35                                                 
    36                                                 task read ;
    37              1                       1000         repeat(1000)begin
    38              1                       1000          start_item(seq_item);
    39                                                      assert(seq_item.randomize()with {seq_item.rst == 0 ;seq_item.Rr_en == 1 ;seq_item.En ==1 ;})
    40                                                         else 
    41                                                         $error("randomization error") ;
    42              1                       1000          finish_item(seq_item);
    43                                                   end
    44                                                 endtask
    45                                                 
    46                                                  
    47                                                 task body();
    48              1                          1           reset();
    49              1                          1           write();
    50              1                          1           read ();
    51                                                   endtask
    52                                               endclass
    53                                               
    54                                               class write_read_seq extends my_sequence ;
    55              1                    ***0***       `uvm_object_utils(write_read_seq)
    55              2                    ***0***     
    55              3                    ***0***     
    55              4                    ***0***     
    55              5                    ***0***     
    55              6                          1     
    55              7                    ***0***     
    55              8                    ***0***     
    55              9                    ***0***     
    55             10                    ***0***     
    56                                                   my_sequence_item seq_item; 
    57                                                   
    58                                                   int i;   
    59              1                          1         int max_loop= 200;
    60                                                 
    61                                                 function new(string name = "write_read_seq");
    62              1                          1         super.new(name);
    63                                                 endfunction
    64                                               
    65                                                  task pre_body;
    66              1                          1        seq_item = my_sequence_item::type_id::create("seq_item"); 
    67                                                  endtask
    68                                               
    69                                                 task write;
    70              1                        100         start_item(seq_item);
    71                                                     assert(seq_item.randomize()with {seq_item.rst == 0 ;seq_item.Rw_en == 1 ;seq_item.En ==1 ;})
    72                                                        else 
    73                                                        $error("randomization error") ;
    74              1                        100         finish_item(seq_item);
    75                                                 endtask
    76                                               
    77                                                 task read;
    78              1                        100          start_item(seq_item);   
    79                                                      assert(seq_item.randomize()with {seq_item.rst == 0 ;seq_item.Rr_en == 1 ;seq_item.En ==1 ;})
    80                                                        else 
    81                                                        $error("randomization error") ;
    82              1                        100           finish_item(seq_item);
    83                                                 endtask
    84                                               
    85                                                 task body;
    86              1                          1         for( i= 0 ; i<max_loop ; i++ )begin
    86              2                        200     
    87                                                       if (i%2!=0)begin
    88              1                        100               write;
    89                                                       end else begin
    90              1                        100               read;
    91                                                     end
    92                                                     end
    93                                                   endtask
    94                                               endclass
    95                                                   
    96                                                   

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                        22         2        20      9.09

================================Branch Details================================

Branch Coverage for file my_sequence.sv --

------------------------------------IF Branch------------------------------------
    4                                    ***0***     Count coming in to IF
    4               1                    ***0***       `uvm_object_utils(my_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    4                                    ***0***     Count coming in to IF
    4               2                    ***0***       `uvm_object_utils(my_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    4                                    ***0***     Count coming in to IF
    4               3                    ***0***       `uvm_object_utils(my_sequence)
    4               4                    ***0***       `uvm_object_utils(my_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    4                                    ***0***     Count coming in to IF
    4               5                    ***0***       `uvm_object_utils(my_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    4                                    ***0***     Count coming in to IF
    4               6                    ***0***       `uvm_object_utils(my_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    55                                   ***0***     Count coming in to IF
    55              1                    ***0***       `uvm_object_utils(write_read_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    55                                   ***0***     Count coming in to IF
    55              2                    ***0***       `uvm_object_utils(write_read_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    55                                   ***0***     Count coming in to IF
    55              3                    ***0***       `uvm_object_utils(write_read_seq)
    55              4                    ***0***       `uvm_object_utils(write_read_seq)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    55                                   ***0***     Count coming in to IF
    55              5                    ***0***       `uvm_object_utils(write_read_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    55                                   ***0***     Count coming in to IF
    55              6                    ***0***       `uvm_object_utils(write_read_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    87                                       200     Count coming in to IF
    87              1                        100             if (i%2!=0)begin
    89              1                        100             end else begin
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              5         1         4     20.00

================================Condition Details================================

Condition Coverage for file my_sequence.sv --

----------------Focused Condition View-------------------
Line       4 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       4 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       55 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       55 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       87 Item    1  ((this.i % 2) != 0)
Condition totals: 1 of 1 input term covered = 100.00%



=================================================================================
=== File: my_sequence_item.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           11         2         9     18.18

================================Statement Details================================

Statement Coverage for file my_sequence_item.sv --

    1                                                
    2                                                
    3                                                class my_sequence_item extends uvm_sequence_item;
    4               1                    ***0***        `uvm_object_utils(my_sequence_item)
    4               2                    ***0***     
    4               3                    ***0***     
    4               4                    ***0***     
    4               5                    ***0***     
    4               6                       6205     
    4               7                    ***0***     
    4               8                    ***0***     
    4               9                    ***0***     
    4              10                    ***0***     
    5                                                
    6                                                  
    7                                                  function new (string name = "my_sequence_item");
    8               1                          5         super.new(name);
    9                                                  endfunction
    10                                                 
    11                                                 rand logic En, rst,Rr_en,Rw_en;
    12                                                 logic        Valid_out ;
    13                                                 logic        [31:0] Data_out;
    14                                                 randc logic  [3:0] Address  ;
    15                                                 rand  logic  [31:0] Data_in ;
    16                                                 
    17                                               
    18                                                   constraint Rw_Rr       {{Rr_en != Rw_en};}
    19                                                   constraint rst_en      { rst     dist {0:=50,1:=5};}
    20                                               
    21                                                   constraint address     {Address  dist {[0:15]:/100};}
    22                                                   constraint data_in     {Data_in  dist {32'h0:=0.5, [32'd1:32'd254]:/100 ,32'd255:=0.5};} 
    23                                               endclass

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                        10         0        10      0.00

================================Branch Details================================

Branch Coverage for file my_sequence_item.sv --

------------------------------------IF Branch------------------------------------
    4                                    ***0***     Count coming in to IF
    4               1                    ***0***        `uvm_object_utils(my_sequence_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    4                                    ***0***     Count coming in to IF
    4               2                    ***0***        `uvm_object_utils(my_sequence_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    4                                    ***0***     Count coming in to IF
    4               3                    ***0***        `uvm_object_utils(my_sequence_item)
    4               4                    ***0***        `uvm_object_utils(my_sequence_item)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    4                                    ***0***     Count coming in to IF
    4               5                    ***0***        `uvm_object_utils(my_sequence_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    4                                    ***0***     Count coming in to IF
    4               6                    ***0***        `uvm_object_utils(my_sequence_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              2         0         2      0.00

================================Condition Details================================

Condition Coverage for file my_sequence_item.sv --

----------------Focused Condition View-------------------
Line       4 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       4 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             



=================================================================================
=== File: my_sequencer.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                            7         4         3     57.14

================================Statement Details================================

Statement Coverage for file my_sequencer.sv --

    1                                                
    2                                                
    3                                                class my_sequencer extends uvm_sequencer #(my_sequence_item);
    4               1                    ***0***       `uvm_component_utils(my_sequencer)
    4               2                    ***0***     
    4               3                    ***0***     
    5                                                   my_sequence_item seq_item;
    6                                                  
    7                                                  function new(string name = "my_sequencer", uvm_component parent);
    8               1                          1         super.new(name, parent);
    9                                                  endfunction
    10                                                 
    11                                                 function void build_phase(uvm_phase phase);
    12              1                          1         super.build_phase(phase);
    13                                                 endfunction
    14                                                 
    15                                                 function void connect_phase(uvm_phase phase);
    16              1                          1         super.connect_phase(phase);
    17                                                 endfunction
    18                                                 
    19                                                 task run_phase(uvm_phase phase);
    20              1                          1         super.run_phase(phase);
    21                                                 endtask
    22                                                 
    23                                               endclass


=================================================================================
=== File: my_subscriber.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           14        12         2     85.71

================================Statement Details================================

Statement Coverage for file my_subscriber.sv --

    1                                                
    2                                                class my_subscriber extends uvm_subscriber#(my_sequence_item);
    3               1                    ***0***       `uvm_component_utils(my_subscriber)
    3               2                    ***0***     
    3               3                          2     
    4                                                   my_sequence_item seq_item;
    5                                                  
    6                                                  int final_cover;
    7                                                  
    8                                                  covergroup group_1;
    9                                                        Address: coverpoint seq_item.Address 
    10                                                        {
    11                                                         bins addr_bins[] = {[0:15]};  
    12                                                        }
    13                                                   
    14                                                       rst: coverpoint seq_item.rst 
    15                                                       {
    16                                                        bins rst_L    = {0};
    17                                                        bins rst_H    = {1};
    18                                                       // bins rst_L2H  = (0=>1); 
    19                                                       // bins rst_H2L  = (1=>0);
    20                                                        }
    21                                                   
    22                                                        Rr_en: coverpoint seq_item.Rr_en
    23                                                        {
    24                                                        bins read_L    = {0};
    25                                                        bins read_H    = {1};
    26                                               
    27                                                        }
    28                                                   
    29                                                        Rw_en: coverpoint seq_item.Rw_en
    30                                                        {
    31                                                         bins write_L   = {0};
    32                                                         bins write_H   = {1};
    33                                               
    34                                                         }
    35                                               
    36                                                         En: coverpoint seq_item.En 
    37                                                         {
    38                                                         
    39                                                          bins en_H   = {1};
    40                                               
    41                                                         }
    42                                                   
    43                                                         Valid_out : coverpoint seq_item.Valid_out
    44                                                         {
    45                                                          bins V_L   = {0};
    46                                                          bins V_H   = {1};
    47                                               
    48                                                         }
    49                                                   
    50                                                         Data_in: coverpoint seq_item.Data_in
    51                                                         {
    52                                                         bins data_in = {[0:255]};
    53                                                         }
    54                                                   
    55                                                         
    56                                                         
    57                                                         cross1: cross Address, Data_in, En, Rw_en;// check write
    58                                                         cross2: cross Address, Data_in, En, Rr_en;// check read
    59                                                         cross3: cross Data_in, rst;      // check reset
    60                                                 endgroup
    61                                               
    62                                                  
    63                                                 function new(string name, uvm_component parent);
    64              1                          1         super.new(name, parent);
    65              1                          1         group_1 = new();
    66                                                 endfunction
    67                                                 
    68                                                 function void write(input my_sequence_item t);
    69              1                       6204         this.seq_item = t; // Assign the sequence item to class-level variable
    70                                                   // Sample the coverage group with the sequence item
    71              1                       6204         group_1.sample();
    72                                                 endfunction
    73                                                 
    74                                                 function void build_phase(uvm_phase phase);
    75              1                          1         super.build_phase(phase);
    76              1                          1         seq_item = my_sequence_item::type_id::create("seq_item");
    77                                                 endfunction
    78                                                 
    79                                                 function void connect_phase(uvm_phase phase);
    80              1                          1         super.connect_phase(phase);
    81                                                 endfunction
    82                                                 
    83                                                 task run_phase(uvm_phase phase);
    84              1                          1         super.run_phase(phase);
    85                                                 endtask
    86                                                 
    87                                                 function void report_phase(uvm_phase phase);
    88              1                          1         super.report_phase(phase);
    89              1                          1         final_cover = group_1.get_coverage();
    90              1                          1         `uvm_info(get_type_name(), $sformatf("Final Coverage is: %0f", final_cover), UVM_LOW);
    91                                                   
    92                                                 endfunction
    93                                                
    94                                               endclass

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         2         1         1     50.00

================================Branch Details================================

Branch Coverage for file my_subscriber.sv --

------------------------------------IF Branch------------------------------------
    90                                         1     Count coming in to IF
    90              1                          1         `uvm_info(get_type_name(), $sformatf("Final Coverage is: %0f", final_cover), UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%



=================================================================================
=== File: my_test.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           16        13         3     81.25

================================Statement Details================================

Statement Coverage for file my_test.sv --

    1                                                
    2                                                class my_test extends uvm_test;
    3               1                    ***0***       `uvm_component_utils(my_test)
    3               2                    ***0***     
    3               3                          1     
    4                                                    my_env          env;
    5                                                    my_sequence     seq_inst;
    6                                                    write_read_seq  write_read ;
    7                                                    virtual intf my_vif;
    8                                                  
    9                                                  function new(string name, uvm_component parent);
    10              1                          1         super.new(name, parent);
    11                                                 endfunction
    12                                               
    13                                                 function void build_phase(uvm_phase phase);
    14              1                          1         super.build_phase(phase);
    15              1                          1         env         = my_env::type_id::create              ("env", this);
    16              1                          1         seq_inst    = my_sequence::type_id::create         ("seq_inst" );
    17              1                          1         write_read  =  write_read_seq::type_id::create     (" write_read_seq ");
    18                                               
    19                                                   if(!uvm_config_db#(virtual intf)::get(this, "", "my_vif", my_vif))
    20              1                    ***0***           `uvm_fatal(get_full_name(), "Error")
    21              1                          1            uvm_config_db#(virtual intf)::set(this, "env", "my_vif", my_vif);
    22                                                 endfunction
    23                                                 
    24                                                 function void connect_phase(uvm_phase phase);
    25              1                          1         super.connect_phase(phase);
    26                                                 endfunction
    27                                                 
    28                                                 task run_phase(uvm_phase phase);
    29              1                          1         super.run_phase(phase);
    30                                                   
    31              1                          1         phase.raise_objection(this);
    32                                               
    33              1                          1           seq_inst.start  (env.agent.sequencer);
    34              1                          1           write_read.start(env.agent.sequencer);
    35                                                 
    36              1                          1         phase.drop_objection(this);
    37                                                
    38                                                 endtask 
    39                                               endclass 

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         4         1         3     25.00

================================Branch Details================================

Branch Coverage for file my_test.sv --

------------------------------------IF Branch------------------------------------
    19                                         1     Count coming in to IF
    19              1                    ***0***         if(!uvm_config_db#(virtual intf)::get(this, "", "my_vif", my_vif))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    20                                   ***0***     Count coming in to IF
    20              1                    ***0***           `uvm_fatal(get_full_name(), "Error")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%



=================================================================================
=== File: tb.sv
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                            5         5         0    100.00

================================Statement Details================================

Statement Coverage for file tb.sv --

    1                                                
    2                                                
    3                                                `include "uvm_macros.svh"
    4                                                `include "mem.sv"
    5                                                `include "intf.sv"
    6                                                import uvm_pkg::*;
    7                                                
    8                                                module top;
    9                                                  bit clk;
    10              1                      12411       always #5 clk = ~clk;
    10              2                      12410     
    11                                               
    12                                                 import memory_pkg::*;
    13                                                 intf in1 (clk);
    14                                               
    15                                                 // Instantiate the memory module and pass the interface
    16                                                 mem mem_inst (.in1(in1));
    17                                               
    18                                                 initial begin
    19              1                          1         clk = 0;
    20              1                          1         uvm_config_db#(virtual intf)::set(null, "uvm_test_top", "my_vif", in1);
    21              1                          1         run_test("my_test");
    22                                                 end
    23                                               endmodule

Toggle Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Toggle Bins                      2         2         0    100.00

================================Toggle Details================================

Toggle Coverage for File tb.sv --

       Line                                   Node      1H->0L      0L->1H  "Coverage"
--------------------------------------------------------------------------------------

Total Node Count     =          1 
Toggled Node Count   =          1 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (2 of 2 bins)

COVERGROUP COVERAGE:
-----------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal    Status               
                                                                                              
-----------------------------------------------------------------------------------------------
 TYPE /memory_pkg/my_subscriber/group_1               100.00%        100    Covered              
    covered/total bins:                                    92         92                      
    missing/total bins:                                     0         92                      
    % Hit:                                            100.00%        100                      
    Coverpoint group_1::Address                       100.00%        100    Covered              
        covered/total bins:                                16         16                      
        missing/total bins:                                 0         16                      
        % Hit:                                        100.00%        100                      
        bin addr_bins[0]                                  388          1    Covered              
        bin addr_bins[1]                                  387          1    Covered              
        bin addr_bins[2]                                  387          1    Covered              
        bin addr_bins[3]                                  388          1    Covered              
        bin addr_bins[4]                                  388          1    Covered              
        bin addr_bins[5]                                  389          1    Covered              
        bin addr_bins[6]                                  388          1    Covered              
        bin addr_bins[7]                                  388          1    Covered              
        bin addr_bins[8]                                  387          1    Covered              
        bin addr_bins[9]                                  389          1    Covered              
        bin addr_bins[10]                                 387          1    Covered              
        bin addr_bins[11]                                 388          1    Covered              
        bin addr_bins[12]                                 387          1    Covered              
        bin addr_bins[13]                                 387          1    Covered              
        bin addr_bins[14]                                 389          1    Covered              
        bin addr_bins[15]                                 387          1    Covered              
    Coverpoint group_1::rst                           100.00%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                        100.00%        100                      
        bin rst_L                                        6199          1    Covered              
        bin rst_H                                           5          1    Covered              
    Coverpoint group_1::Rr_en                         100.00%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                        100.00%        100                      
        bin read_L                                       5101          1    Covered              
        bin read_H                                       1103          1    Covered              
    Coverpoint group_1::Rw_en                         100.00%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                        100.00%        100                      
        bin write_L                                      1103          1    Covered              
        bin write_H                                      5101          1    Covered              
    Coverpoint group_1::En                            100.00%        100    Covered              
        covered/total bins:                                 1          1                      
        missing/total bins:                                 0          1                      
        % Hit:                                        100.00%        100                      
        bin en_H                                         6201          1    Covered              
    Coverpoint group_1::Valid_out                     100.00%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                        100.00%        100                      
        bin V_L                                          5099          1    Covered              
        bin V_H                                          1100          1    Covered              
    Coverpoint group_1::Data_in                       100.00%        100    Covered              
        covered/total bins:                                 1          1                      
        missing/total bins:                                 0          1                      
        % Hit:                                        100.00%        100                      
        bin data_in                                      6204          1    Covered              
    Cross group_1::cross1                             100.00%        100    Covered              
        covered/total bins:                                32         32                      
        missing/total bins:                                 0         32                      
        % Hit:                                        100.00%        100                      
        bin <addr_bins[0],data_in,en_H,write_L>            71          1    Covered              
        bin <addr_bins[1],data_in,en_H,write_L>            71          1    Covered              
        bin <addr_bins[2],data_in,en_H,write_L>            69          1    Covered              
        bin <addr_bins[3],data_in,en_H,write_L>            71          1    Covered              
        bin <addr_bins[4],data_in,en_H,write_L>            73          1    Covered              
        bin <addr_bins[5],data_in,en_H,write_L>            72          1    Covered              
        bin <addr_bins[6],data_in,en_H,write_L>            72          1    Covered              
        bin <addr_bins[7],data_in,en_H,write_L>            71          1    Covered              
        bin <addr_bins[8],data_in,en_H,write_L>            67          1    Covered              
        bin <addr_bins[9],data_in,en_H,write_L>            66          1    Covered              
        bin <addr_bins[10],data_in,en_H,write_L>           67          1    Covered              
        bin <addr_bins[11],data_in,en_H,write_L>           65          1    Covered              
        bin <addr_bins[12],data_in,en_H,write_L>           67          1    Covered              
        bin <addr_bins[13],data_in,en_H,write_L>           67          1    Covered              
        bin <addr_bins[14],data_in,en_H,write_L>           67          1    Covered              
        bin <addr_bins[15],data_in,en_H,write_L>           66          1    Covered              
        bin <addr_bins[0],data_in,en_H,write_H>           316          1    Covered              
        bin <addr_bins[1],data_in,en_H,write_H>           315          1    Covered              
        bin <addr_bins[2],data_in,en_H,write_H>           318          1    Covered              
        bin <addr_bins[3],data_in,en_H,write_H>           317          1    Covered              
        bin <addr_bins[4],data_in,en_H,write_H>           315          1    Covered              
        bin <addr_bins[5],data_in,en_H,write_H>           317          1    Covered              
        bin <addr_bins[6],data_in,en_H,write_H>           316          1    Covered              
        bin <addr_bins[7],data_in,en_H,write_H>           317          1    Covered              
        bin <addr_bins[8],data_in,en_H,write_H>           320          1    Covered              
        bin <addr_bins[9],data_in,en_H,write_H>           323          1    Covered              
        bin <addr_bins[10],data_in,en_H,write_H>          320          1    Covered              
        bin <addr_bins[11],data_in,en_H,write_H>          323          1    Covered              
        bin <addr_bins[12],data_in,en_H,write_H>          320          1    Covered              
        bin <addr_bins[13],data_in,en_H,write_H>          320          1    Covered              
        bin <addr_bins[14],data_in,en_H,write_H>          322          1    Covered              
        bin <addr_bins[15],data_in,en_H,write_H>          320          1    Covered              
    Cross group_1::cross2                             100.00%        100    Covered              
        covered/total bins:                                32         32                      
        missing/total bins:                                 0         32                      
        % Hit:                                        100.00%        100                      
        bin <addr_bins[0],data_in,en_H,read_L>            316          1    Covered              
        bin <addr_bins[1],data_in,en_H,read_L>            315          1    Covered              
        bin <addr_bins[2],data_in,en_H,read_L>            318          1    Covered              
        bin <addr_bins[3],data_in,en_H,read_L>            317          1    Covered              
        bin <addr_bins[4],data_in,en_H,read_L>            315          1    Covered              
        bin <addr_bins[5],data_in,en_H,read_L>            317          1    Covered              
        bin <addr_bins[6],data_in,en_H,read_L>            316          1    Covered              
        bin <addr_bins[7],data_in,en_H,read_L>            317          1    Covered              
        bin <addr_bins[8],data_in,en_H,read_L>            320          1    Covered              
        bin <addr_bins[9],data_in,en_H,read_L>            323          1    Covered              
        bin <addr_bins[10],data_in,en_H,read_L>           320          1    Covered              
        bin <addr_bins[11],data_in,en_H,read_L>           323          1    Covered              
        bin <addr_bins[12],data_in,en_H,read_L>           320          1    Covered              
        bin <addr_bins[13],data_in,en_H,read_L>           320          1    Covered              
        bin <addr_bins[14],data_in,en_H,read_L>           322          1    Covered              
        bin <addr_bins[15],data_in,en_H,read_L>           320          1    Covered              
        bin <addr_bins[0],data_in,en_H,read_H>             71          1    Covered              
        bin <addr_bins[1],data_in,en_H,read_H>             71          1    Covered              
        bin <addr_bins[2],data_in,en_H,read_H>             69          1    Covered              
        bin <addr_bins[3],data_in,en_H,read_H>             71          1    Covered              
        bin <addr_bins[4],data_in,en_H,read_H>             73          1    Covered              
        bin <addr_bins[5],data_in,en_H,read_H>             72          1    Covered              
        bin <addr_bins[6],data_in,en_H,read_H>             72          1    Covered              
        bin <addr_bins[7],data_in,en_H,read_H>             71          1    Covered              
        bin <addr_bins[8],data_in,en_H,read_H>             67          1    Covered              
        bin <addr_bins[9],data_in,en_H,read_H>             66          1    Covered              
        bin <addr_bins[10],data_in,en_H,read_H>            67          1    Covered              
        bin <addr_bins[11],data_in,en_H,read_H>            65          1    Covered              
        bin <addr_bins[12],data_in,en_H,read_H>            67          1    Covered              
        bin <addr_bins[13],data_in,en_H,read_H>            67          1    Covered              
        bin <addr_bins[14],data_in,en_H,read_H>            67          1    Covered              
        bin <addr_bins[15],data_in,en_H,read_H>            66          1    Covered              
    Cross group_1::cross3                             100.00%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                        100.00%        100                      
        bin <data_in,rst_L>                              6199          1    Covered              
        bin <data_in,rst_H>                                 5          1    Covered              

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 1

Total Coverage By File (code coverage only, filtered view): 38.71%

